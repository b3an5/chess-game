{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["Chess","require","App","useState","chess","fen","setFen","className","width","position","onDrop","move","setTimeout","moves","length","computerMove","Math","floor","random","handleMove","from","sourceSquare","to","targetSquare","promotion","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAKMA,EAAQC,EAAQ,IAsCPC,EApCO,WAAO,IAAD,EAEVC,mBACd,IAAIH,EAAM,6DADLI,EAFmB,sBAMJD,mBAASC,EAAMC,OANX,mBAMnBA,EANmB,KAMdC,EANc,KAwB1B,OACE,sBAAKC,UAAU,cAAf,UACE,4DACA,cAAC,IAAD,CACEC,MAAO,IACPC,SAAUJ,EACVK,OAAQ,SAACC,GAAD,OAtBK,SAACA,GACbP,EAAMO,KAAKA,KACdC,YAAW,WACT,IAAMC,EAAQT,EAAMS,QAEpB,GAAIA,EAAMC,OAAS,EAAG,CACpB,IAAMC,EAAeF,EAAMG,KAAKC,MAAMD,KAAKE,SAAWL,EAAMC,SAC5DV,EAAMO,KAAKI,GACXT,EAAOF,EAAMC,UAEd,KAEHC,EAAOF,EAAMC,QAUOc,CAAW,CAACC,KAAMT,EAAKU,aAAcC,GAAIX,EAAKY,aAAcC,UAAW,aCvBlFC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.33c49bb8.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Chessboard from \"chessboardjsx\";\nimport { ChessInstance, ShortMove } from \"chess.js\";\n\nconst Chess = require(\"chess.js\");\n\nconst App: React.FC = () => {\n\n  const [chess] = useState<ChessInstance>(\n    new Chess(\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\")\n  )\n\n  const [fen, setFen] = useState(chess.fen());\n\n  const handleMove = (move: ShortMove) => {\n    if ( chess.move(move)) {\n      setTimeout(() => {\n        const moves = chess.moves()\n\n        if (moves.length > 0) {\n          const computerMove = moves[Math.floor(Math.random() * moves.length)]\n          chess.move(computerMove)\n          setFen(chess.fen())\n        }\n      }, 300)\n\n      setFen(chess.fen())\n    }\n  }\n\n  return (\n    <div className=\"flex-center\">\n      <h1>The peasant's Gambit Chess</h1>\n      <Chessboard\n        width={400}\n        position={fen}\n        onDrop={(move) => handleMove({from: move.sourceSquare, to: move.targetSquare, promotion: \"q\"})}\n      />\n    </div>\n  )\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}